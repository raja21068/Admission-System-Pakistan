/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admission.reports.filters;

import admission.controller.DatabaseManager;
import admission.model.AdmissionYear;
import admission.model.Part;
import admission.model.PartRegistry;
import admission.model.ProgramType;
import admission.reports.ReportFilterProvider;
import admission.reports.beans.CandidateChallanDetailJRBean;
import admission.utils.DateUtility;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;

/**
 *
 * @author Server
 */
public class PartRegistryFilter extends javax.swing.JPanel implements ReportFilterProvider {

    public static int ADMISSION_FEE_TYPE = 0;
    public static int RETAIN_FEE_TYPE = 1;
    public static int REFUND_FEE_TYPE = 2;
    public static int ALL_FEE_TYPES = 3;
    
    /**
     * Creates new form PartRegistryFilter
     */
    public PartRegistryFilter() {
        initComponents();
        getAdmissionYear();
        getProgramType();
        getProgramPart();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel13 = new javax.swing.JLabel();
        admissionYearComboBox = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        programTypeComboBox = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        partComboBox = new javax.swing.JComboBox();
        dateToFormattedTextField = new javax.swing.JFormattedTextField();
        dateFromFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        feesTypeComboBox = new javax.swing.JComboBox();

        jLabel13.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel13.setText("Admission Year:");

        admissionYearComboBox.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        admissionYearComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admissionYearComboBoxActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel14.setText("Program Type");

        programTypeComboBox.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        programTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                programTypeComboBoxActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel15.setText("Program Part");

        partComboBox.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        partComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                partComboBoxActionPerformed(evt);
            }
        });

        try {
            dateToFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        dateToFormattedTextField.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        try {
            dateFromFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        dateFromFormattedTextField.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        jLabel16.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel16.setText("To");

        jLabel17.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel17.setText("From");

        jLabel18.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel18.setText("Fees Type");

        feesTypeComboBox.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        feesTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Admission", "Retain", "Refund", "--All--" }));
        feesTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feesTypeComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(admissionYearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(51, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(programTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(partComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateFromFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateToFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(feesTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(admissionYearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(programTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(partComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(feesTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateToFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateFromFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addContainerGap(36, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void admissionYearComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admissionYearComboBoxActionPerformed

    }//GEN-LAST:event_admissionYearComboBoxActionPerformed

    private void programTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_programTypeComboBoxActionPerformed
        getProgramPart();
    }//GEN-LAST:event_programTypeComboBoxActionPerformed

    private void partComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_partComboBoxActionPerformed

    }//GEN-LAST:event_partComboBoxActionPerformed

    private void feesTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feesTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_feesTypeComboBoxActionPerformed

    private void getAdmissionYear() {
        this.admissionYearComboBox.removeAllItems();

        List<AdmissionYear> list = DatabaseManager.getData(AdmissionYear.class.getName(), "year DESC");
        this.admissionYearComboBox.setModel(new DefaultComboBoxModel(list.toArray()));

    }

    private void getProgramType() {
        List<AdmissionYear> list = DatabaseManager.getData(ProgramType.class.getName(), "name");
        programTypeComboBox.setModel(new DefaultComboBoxModel(list.toArray()));
    }

    private void getProgramPart() {
        ProgramType type = (ProgramType) programTypeComboBox.getSelectedItem();
        if (type == null) {
            return;
        }
        List<Part> list = DatabaseManager.getData(Part.class.getName(), "programType.programTypeId = " + type.getProgramTypeId(), " partNo");
        partComboBox.setModel(new DefaultComboBoxModel(list.toArray()));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox admissionYearComboBox;
    private javax.swing.JFormattedTextField dateFromFormattedTextField;
    private javax.swing.JFormattedTextField dateToFormattedTextField;
    private javax.swing.JComboBox feesTypeComboBox;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JComboBox partComboBox;
    private javax.swing.JComboBox programTypeComboBox;
    // End of variables declaration//GEN-END:variables
    String totalAmount = null;
    
    @Override
    public JRBeanCollectionDataSource getJRDataSource() {
        JRBeanCollectionDataSource source = null;
        totalAmount = "";
        AdmissionYear ay = (AdmissionYear) admissionYearComboBox.getSelectedItem();
        ProgramType type = (ProgramType) programTypeComboBox.getSelectedItem();
        Part part = (Part)partComboBox.getSelectedItem();
        Date fromDate = DateUtility.getStringToDate(dateFromFormattedTextField.getText());
        Date toDate = DateUtility.getStringToDate(dateToFormattedTextField.getText());
        if (ay == null || type == null || fromDate == null || toDate == null) {
            return null;
        }

        try {
            String hql = "SELECT PR FROM PartRegistry PR "
                    + " INNER JOIN PR.admissionListDetails  ALD "
                    + " INNER JOIN ALD.candidate CN "
                    + " WHERE CN.admissionYear.admissionYearId = " + ay.getAdmissionYearId()
                    + " AND CN.programType.programTypeId = " + type.getProgramTypeId()
                    + " AND PR.part.partId = "+part.getPartId()
                    + " AND  PR.challanDate BETWEEN :fromDate AND :toDate "
                    +( feesTypeComboBox.getSelectedIndex()==ALL_FEE_TYPES ? "" : " AND PR.type = "+feesTypeComboBox.getSelectedIndex() )
                    + " ORDER BY PR.challanDate, PR.challanNo";
            Map<String, Object> params = new LinkedHashMap<>();
            params.put("fromDate", fromDate);
            params.put("toDate", toDate);
            SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
            List<PartRegistry> result = DatabaseManager.executeQuery(PartRegistry.class, hql, params);
            List<CandidateChallanDetailJRBean> jrList = new LinkedList<>();
            int totalAmountInt = 0;
            for (PartRegistry partRegistry : result) {
                CandidateChallanDetailJRBean challanDetail = new CandidateChallanDetailJRBean();
                challanDetail.setSeatNo(partRegistry.getAccounts().getCandidate().getSeatNo());
                challanDetail.setName(partRegistry.getAccounts().getCandidate().getName());
                challanDetail.setFathersName(partRegistry.getAccounts().getCandidate().getFathersName());
                challanDetail.setCode(partRegistry.getAdmissionListDetails().getCampusCategory().toString());
                challanDetail.setChallanNo(partRegistry.getChallanNo());
                challanDetail.setDiscipline(partRegistry.getAdmissionListDetails().getCposGroup().getCampusProgramOfStudy().getProgramOfStudy().toString());
                challanDetail.setPaidDate(formatter.format(partRegistry.getChallanDate()));
                challanDetail.setTotalAmount(admission.utils.NumberFormatter.format(partRegistry.getAmount()));
                jrList.add(challanDetail);
                totalAmountInt = partRegistry.getAmount()+totalAmountInt;
            }
            totalAmount = admission.utils.NumberFormatter.format(totalAmountInt);
            source = new JRBeanCollectionDataSource(jrList);
        } catch (Exception ex) {
            Logger.getLogger(MasterSelectionListFilter.class.getName()).log(Level.SEVERE, null, ex);
        }
        return source;
    }

    @Override
    public Map fillReportParameter(Map map) {
        AdmissionYear ay = (AdmissionYear) admissionYearComboBox.getSelectedItem();
        ProgramType type = (ProgramType) programTypeComboBox.getSelectedItem();
        Part p = (Part)partComboBox.getSelectedItem();
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
        map.put("TOTAL_AMOUNT", totalAmount);
        map.put("PROGRAM_TYPE", type.getName()+" ("+p.getName()+") - "+ay.getYear());
        map.put("TODAY", formatter.format(new Date()) );
        map.put("DATE_UPTO", dateFromFormattedTextField.getText()+" TO "+dateToFormattedTextField.getText());
        return map;
    }

}
