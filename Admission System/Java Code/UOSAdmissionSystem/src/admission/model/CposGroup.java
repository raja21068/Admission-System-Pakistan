package admission.model;
// Generated Jun 30, 2014 5:25:15 PM by Hibernate Tools 3.6.0

import admission.enums.GroupEnum;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * CposGroup generated by hbm2java
 */
@Entity
@Table(name = "cpos_group"
)
public class CposGroup implements java.io.Serializable {

    private int programOfStudyId;
    private int campusProgramOfStudyId;
    private boolean posIsQuotaOriented;
    private String posName;
    private String programName;
    private String campusName;
    private String disciplineCode;
    private String departmentName;
    private boolean isBachelor;
    private int posPCode;
    private int shiftId;
    private String shiftName;
    private boolean isMorning;
    private int programTypeId;

    private Integer cposGroupId;
    private CampusProgramOfStudy campusProgramOfStudy;
    private GroupEnum group;
    private String remarks;
    private String code;
    private Set<DisciplineCategorySeats> disciplineCategorySeatses = new HashSet<DisciplineCategorySeats>(0);
    private Set<AdmissionListDetails> admissionListDetailses = new HashSet<AdmissionListDetails>(0);

    public CposGroup() {
    }

    public CposGroup(CampusProgramOfStudy campusProgramOfStudy) {
        this.campusProgramOfStudy = campusProgramOfStudy;
    }

    public CposGroup(CampusProgramOfStudy campusProgramOfStudy, GroupEnum group, String remarks, String code, Set<DisciplineCategorySeats> disciplineCategorySeatses, Set<AdmissionListDetails> admissionListDetailses) {
        this.campusProgramOfStudy = campusProgramOfStudy;
        this.group = group;
        this.remarks = remarks;
        this.code = code;
        this.disciplineCategorySeatses = disciplineCategorySeatses;
        this.admissionListDetailses = admissionListDetailses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "cpos_group_id", unique = true, nullable = false)
    public Integer getCposGroupId() {
        return this.cposGroupId;
    }

    public void setCposGroupId(Integer cposGroupId) {
        this.cposGroupId = cposGroupId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "campus_program_of_study_id", nullable = false)
    public CampusProgramOfStudy getCampusProgramOfStudy() {
        return this.campusProgramOfStudy;
    }

    public void setCampusProgramOfStudy(CampusProgramOfStudy campusProgramOfStudy) {
        this.campusProgramOfStudy = campusProgramOfStudy;
    }

    @Column(name = "group_code")
    @Enumerated(EnumType.ORDINAL)
    public GroupEnum getGroup() {
        return group;
    }

    public void setGroup(GroupEnum group) {
        this.group = group;
    }

    @Column(name = "remarks", length = 45)
    public String getRemarks() {
        return this.remarks;
    }

    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

    @Column(name = "code", length = 5)
    public String getCode() {
        return this.code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "cposGroup")
    public Set<DisciplineCategorySeats> getDisciplineCategorySeatses() {
        return this.disciplineCategorySeatses;
    }

    public void setDisciplineCategorySeatses(Set<DisciplineCategorySeats> disciplineCategorySeatses) {
        this.disciplineCategorySeatses = disciplineCategorySeatses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "cposGroup")
    public Set<AdmissionListDetails> getAdmissionListDetailses() {
        return this.admissionListDetailses;
    }

    public void setAdmissionListDetailses(Set<AdmissionListDetails> admissionListDetailses) {
        this.admissionListDetailses = admissionListDetailses;
    }

    @Transient
    public boolean isPosIsQuotaOriented() {
        return posIsQuotaOriented;
    }

    public void setPosIsQuotaOriented(boolean posIsQuotaOriented) {
        this.posIsQuotaOriented = posIsQuotaOriented;
    }

    @Transient
    public int getProgramOfStudyId() {
        return programOfStudyId;
    }

    public void setProgramOfStudyId(int programOfStudyId) {
        this.programOfStudyId = programOfStudyId;
    }

    @Transient
    public String getPosName() {
        return posName;
    }

    public void setPosName(String posName) {
        this.posName = posName;
    }

    public void setDisciplineCode(String disciplineCode) {
        this.disciplineCode = disciplineCode;
    }

    public void setIsBachelor(boolean isBachelor) {
        this.isBachelor = isBachelor;
    }

    @Transient
    public String getDisciplineCode() {
        return disciplineCode;
    }

    @Transient
    public boolean isIsBachelor() {
        return isBachelor;
    }

    public void setProgramName(String programName) {
        this.programName = programName;
    }

    @Transient
    public String getProgramName() {
        return programName;
    }

    public void setPosPCode(int posPCode) {
        this.posPCode = posPCode;
    }

    @Transient
    public int getPosPCode() {
        return posPCode;
    }

    public void setCampusName(String campusName) {
        this.campusName = campusName;
    }

    @Transient
    public String getCampusName() {
        return campusName;
    }

    public void setIsMorning(boolean isMorning) {
        this.isMorning = isMorning;
    }

    public void setShiftName(String shiftName) {
        this.shiftName = shiftName;
    }

    @Transient
    public String getShiftName() {
        return shiftName;
    }

    @Transient
    public boolean isIsMorning() {
        return isMorning;
    }

    public void setShiftId(int shiftId) {
        this.shiftId = shiftId;
    }

    @Transient
    public int getShiftId() {
        return shiftId;
    }

    public void setProgramTypeId(int programTypeId) {
        this.programTypeId = programTypeId;
    }

    @Transient
    public int getProgramTypeId() {
        return programTypeId;
    }

    public void setDepartmentName(String departmentName) {
        this.departmentName = departmentName;
    }

    @Transient
    public String getDepartmentName() {
        return departmentName;
    }

    @Transient
    public int getCampusProgramOfStudyId() {
        return campusProgramOfStudyId;
    }

    public void setCampusProgramOfStudyId(int campusProgramOfStudyId) {
        this.campusProgramOfStudyId = campusProgramOfStudyId;
    }

    @Override
    public String toString() {
        if (campusProgramOfStudy != null) {
            ProgramOfStudy pos = this.campusProgramOfStudy.getProgramOfStudy();
            Program program = pos.getProgram();
            ProgramType programType = program.getProgramType();
            Discipline discipline = pos.getDiscipline();

            this.setIsBachelor((programType.getIsBachelor()));
            this.setPosName(this.getCampusProgramOfStudy().toString());
            this.setDisciplineCode(discipline.getCode());
            this.setProgramName(program.toString());
        }
        if (this.isIsBachelor()) {
            return this.getPosName() + (this.getGroup().equals(GroupEnum.GENERAL) ? "" : " " + this.getGroup());
        } else {
            if (this.getDisciplineCode().equals("CS")) {
                return this.getProgramName() + " " + this.getPosName();
            }
            return this.getPosName();
//            return this.getPosName() + (Coder.Decoder.booleanDecode(campusProgramOfStudy.getShift().getIsMorning()) ? "" : " (" + campusProgramOfStudy.getShift() + ")");
        }
    }

}
