package admission.model.security;
// Generated Jun 30, 2014 5:25:15 PM by Hibernate Tools 3.6.0

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Privileges generated by hbm2java
 */
@Entity
@Table(name = "YOG_ENTITY_PRIVILEGE"
)
public class EntityPrivilege implements java.io.Serializable {

    private Integer id;
    private User user;
    private String modelName;
    private Integer modelId;
    private String remarks;

    public EntityPrivilege() {
    }

    public EntityPrivilege(String modelName, Integer modelId, String remarks) {
        this.modelName = modelName;
        this.modelId = modelId;
        this.remarks = remarks;
    }

    public EntityPrivilege(User user, String modelName, Integer modelId, String remarks) {
        this.user = user;
        this.modelName = modelName;
        this.modelId = modelId;
        this.remarks = remarks;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id", nullable = false)
    public User getUser() {
        return this.user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    @Column(name = "MODEL_NAME", nullable = false)
    public String getModelName() {
        return modelName;
    }

    public void setModelName(String modelName) {
        this.modelName = modelName;
    }

    @Column(name = "MODEL_ID", nullable = false)
    public Integer getModelId() {
        return this.modelId;
    }

    public void setModelId(Integer modelId) {
        this.modelId = modelId;
    }

    @Column(name = "remarks", length = 45)
    public String getRemarks() {
        return this.remarks;
    }

    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }
    
    @Transient
    private Object ob;

    @Override
    public String toString() {
        if (id == null) {
            return modelName;
        } else if(ob == null) {
            try {
                Class modelClass = Class.forName(modelName);
                ob = admission.controller.DatabaseManager.getSingleRecord(modelClass, modelId).toString();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(EntityPrivilege.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return ob.toString();
    }
}
