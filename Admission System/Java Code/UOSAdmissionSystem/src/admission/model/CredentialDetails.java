package admission.model;
// Generated Jun 30, 2014 5:25:15 PM by Hibernate Tools 3.6.0

import admission.enums.DetailOfEnum;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * CredentialDetails generated by hbm2java
 */
@Entity
@Table(name = "credential_details"
)
public class CredentialDetails implements java.io.Serializable {

    private int issuerId;
    private int candidateId;
    private int issuerCode;
    private int programId;

    private Integer credentialDetailsId;
    private Issuer issuer;
    private Program program;
    private Candidate candidate;
    private Integer totalMarks;
    private Float marksObtained;
    private String group;
    private String seatNo;
    private Integer passingYear;
    private DetailOfEnum detailOf;
    private String remarks;
    private Set<OptionalSubject> optionalSubjects = new HashSet<OptionalSubject>(0);

    public CredentialDetails() {
    }

    public CredentialDetails(Issuer issuer, Candidate candidate) {
        this.issuer = issuer;
        this.candidate = candidate;
    }

    public CredentialDetails(Issuer issuer, Candidate candidate, Program program, Integer totalMarks, Float marksObtained, String group, String seatNo, Integer passingYear, DetailOfEnum detailOf, String remarks) {
        this.issuer = issuer;
        this.candidate = candidate;
        this.program = program;
        this.totalMarks = totalMarks;
        this.marksObtained = marksObtained;
        this.group = group;
        this.seatNo = seatNo;
        this.passingYear = passingYear;
        this.detailOf = detailOf;
        this.remarks = remarks;
    }

    public CredentialDetails(Issuer issuer, Candidate candidate, Program program, Integer totalMarks, Float marksObtained, String group, String seatNo, Integer passingYear, DetailOfEnum detailOf, String remarks, Set<OptionalSubject> optionalSubjects) {
        this.issuer = issuer;
        this.candidate = candidate;
        this.program = program;
        this.totalMarks = totalMarks;
        this.marksObtained = marksObtained;
        this.group = group;
        this.seatNo = seatNo;
        this.passingYear = passingYear;
        this.detailOf = detailOf;
        this.remarks = remarks;
        this.optionalSubjects = optionalSubjects;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "credential_details_id", unique = true, nullable = false)
    public Integer getCredentialDetailsId() {
        return this.credentialDetailsId;
    }

    public void setCredentialDetailsId(Integer credentialDetailsId) {
        this.credentialDetailsId = credentialDetailsId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "issuer_id", nullable = false)
    public Issuer getIssuer() {
        return this.issuer;
    }

    public void setIssuer(Issuer issuer) {
        this.issuer = issuer;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "candidate_id", nullable = false)
    public Candidate getCandidate() {
        return this.candidate;
    }

    public void setCandidate(Candidate candidate) {
        this.candidate = candidate;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "program_id", nullable = false)
    public Program getProgram() {
        return program;
    }

    public void setProgram(Program program) {
        this.program = program;
    }

    @Column(name = "total_marks")
    public Integer getTotalMarks() {
        return this.totalMarks;
    }

    public void setTotalMarks(Integer totalMarks) {
        this.totalMarks = totalMarks;
    }

    @Column(name = "marks_obtained")
    public Float getMarksObtained() {
        return this.marksObtained;
    }

    public void setMarksObtained(Float marksObtained) {
        this.marksObtained = marksObtained;
    }

    @Column(name = "group_", length = 10)
    public String getGroup() {
        return this.group;
    }

    public void setGroup(String group) {
        this.group = group;
    }

    @Column(name = "seat_no")
    public String getSeatNo() {
        return this.seatNo;
    }

    public void setSeatNo(String seatNo) {
        this.seatNo = seatNo;
    }

    @Column(name = "passing_year")
    public Integer getPassingYear() {
        return this.passingYear;
    }

    public void setPassingYear(Integer passingYear) {
        this.passingYear = passingYear;
    }

    @Column(name = "detail_of")
    @Enumerated
    public DetailOfEnum getDetailOf() {
        return this.detailOf;
    }

    public void setDetailOf(DetailOfEnum detailOf) {
        this.detailOf = detailOf;
    }

    @Column(name = "remarks", length = 45)
    public String getRemarks() {
        return this.remarks;
    }

    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "credentialDetails")
    public Set<OptionalSubject> getOptionalSubjects() {
        return optionalSubjects;
    }

    public void setOptionalSubjects(Set<OptionalSubject> optionalSubjects) {
        this.optionalSubjects = optionalSubjects;
    }

    
    public void setIssuerId(int issuerId) {
        this.issuerId = issuerId;
    }

    public void setCandidateId(int candidateId) {
        this.candidateId = candidateId;
    }
    @Transient
    public int getIssuerId() {
        return issuerId;
    }

    @Transient
    public int getCandidateId() {
        return candidateId;
    }

    public void setIssuerCode(int issuerCode) {
        this.issuerCode = issuerCode;
    }

    @Transient
    public int getProgramId() {
        return programId;
    }

    public void setProgramId(int programId) {
        this.programId = programId;
    }
    
    @Transient
    public int getIssuerCode() {
        return issuerCode;
    }

}
